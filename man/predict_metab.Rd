% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metab_model_interface.R, R/metab_bayes.R,
%   R/metab_model.predict_metab.R
\name{predict_metab}
\alias{predict_metab}
\alias{predict_metab.metab_bayes}
\alias{predict_metab.metab_model}
\title{Predict metabolism from a fitted model.}
\usage{
predict_metab(
  metab_model,
  date_start = NA,
  date_end = NA,
  day_start = get_specs(metab_model)$day_start,
  day_end = min(day_start + 24, get_specs(metab_model)$day_end),
  ...,
  attach.units = FALSE,
  use_saved = TRUE
)

\method{predict_metab}{metab_bayes}(
  metab_model,
  date_start = NA,
  date_end = NA,
  ...,
  attach.units = FALSE
)

\method{predict_metab}{metab_model}(
  metab_model,
  date_start = NA,
  date_end = NA,
  day_start = get_specs(metab_model)$day_start,
  day_end = min(day_start + 24, get_specs(metab_model)$day_end),
  ...,
  attach.units = FALSE,
  use_saved = TRUE
)
}
\arguments{
\item{metab_model}{A metabolism model, implementing the 
metab_model_interface, to use in predicting metabolism}

\item{date_start}{Date or a class convertible with as.Date. The first date 
(inclusive) for which to report metabolism predictions. If NA, no filtering
is done.}

\item{date_end}{Date or a class convertible with as.Date. The last date 
(inclusive) for which to report metabolism predictions. If NA, no filtering
is done.}

\item{day_start}{start time (inclusive) of a day's data in number of hours 
from the midnight that begins the date. For example, day_start=-1.5 
indicates that data describing 2006-06-26 begin at 2006-06-25 22:30, or at 
the first observation time that occurs after that time if day_start doesn't
fall exactly on an observation time. For daily metabolism predictions, 
day_end - day_start should probably equal 24 so that each day's estimate is
representative of a 24-hour period.}

\item{day_end}{end time (exclusive) of a day's data in number of hours from 
the midnight that begins the date. For example, day_end=30 indicates that 
data describing 2006-06-26 end at the last observation time that occurs 
before 2006-06-27 06:00. For daily metabolism predictions, day_end -
day_start should probably equal 24 so that each day's estimate is 
representative of a 24-hour period.}

\item{...}{Other arguments passed to class-specific implementations of 
\code{predict_metab}}

\item{attach.units}{logical. Should units be attached to the output?}

\item{use_saved}{logical. Is it OK to use predictions that were saved with 
the model?}
}
\value{
A data.frame of daily metabolism estimates. Columns include: 
  \describe{
  
  \item{GPP}{numeric estimate of Gross Primary Production, positive when 
  realistic, \eqn{g O_2 m^{-2} d^{-1}}{g O2 / m^2 / d}}
  
  \item{ER}{numeric estimate of Ecosystem Respiration, negative when 
  realistic, \eqn{g O_2 m^{-2} d^{-1}}{g O2 / m^2 / d}}
  
  \item{K600}{numeric estimate of the reaeration rate \eqn{d^{-1}}{1 / d}} }
}
\description{
A function in the metab_model_interface. Returns predictions (estimates) of 
GPP, ER, and K600.
}
\section{Methods (by class)}{
\itemize{
\item \code{metab_bayes}: Pulls daily metabolism estimates out of the Stan 
model results; looks for \code{GPP} or \code{GPP_daily} and for \code{ER} 
or \code{ER_daily} among the \code{params_out} (see \code{\link{specs}}), 
which means you can save just one (or both) of those sets of daily 
parameters when running the Stan model. Saving fewer parameters can help 
models run faster and use less RAM.

\item \code{metab_model}: This implementation is shared by many model types
}}

\examples{
dat <- data_metab('3', day_start=12, day_end=36)
mm <- metab_night(specs(mm_name('night')), data=dat)
predict_metab(mm)
predict_metab(mm, date_start=get_fit(mm)$date[2])
}
\seealso{
Other metab_model_interface: 
\code{\link{get_data_daily}()},
\code{\link{get_data}()},
\code{\link{get_fitting_time}()},
\code{\link{get_fit}()},
\code{\link{get_info}()},
\code{\link{get_param_names}()},
\code{\link{get_params}()},
\code{\link{get_specs}()},
\code{\link{get_version}()},
\code{\link{predict_DO}()}
}
\concept{metab_model_interface}
