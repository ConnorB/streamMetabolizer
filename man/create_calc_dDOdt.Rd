% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_calc_dDOdt.R
\name{create_calc_dDOdt}
\alias{create_calc_dDOdt}
\title{Create a function that generates a 1-day timeseries of DO.mod}
\usage{
create_calc_dDOdt(data, ode_method, GPP_fun, ER_fun, deficit_src)
}
\arguments{
\item{data}{data.frame as in \code{\link{metab}}, except that data must
contain exactly one date worth of inputs (~24 hours according to
\code{\link{specs}$day_start} and \code{\link{specs}$day_end}).}

\item{ode_method}{The method to use in solving the ordinary differential 
equation for DO. Euler: dDOdt from t=1 to t=2 is solely a function of GPP, 
ER, DO, etc. at t=1. pairmeans: dDOdt from t=1 to t=2 is a function of the 
mean values of GPP, ER, etc. across t=1 and t=2.}

\item{GPP_fun}{How to partition daily GPP over time. \code{linlight}: GPP is 
a linear function of light with an intercept at 0. \code{satlight} GPP is a
saturating function of light.}

\item{ER_fun}{How to partition daily ER over time. \code{constant}: ER is
constant over every timestep of the day. \code{q10temp} (not yet
implemented): ER at each timestep is a function of the water temperature.}

\item{deficit_src}{From what DO estimate (observed or modeled) should the DO 
deficit be computed?}
}
\value{
a function that accepts args \code{t} (the time in 0:(n-1) where n is
  the number of timesteps), \code{DO.mod.t} (the value of DO.mod at time t in
  gO2 m^-3), and \code{metab} (a list of metabolism parameters; to see which
  parameters should be included in this list, create \code{dDOdt} with this
  function and then call \code{environment(dDOdt)$metab.needs})
}
\description{
Creates a closure that bundles data and helper functions into a single
function that returns dDOdt in gO2 m^-3 timestep^-1 for any given time t.
}
\examples{
\dontrun{
data <- data_metab('1','30')
dDOdt.obs <- diff(data$DO.obs)
preds.init <- as.list(dplyr::select(
  predict_metab(metab(specs(mm_name('mle', ode_method='Euler')), data=data)),
  GPP.daily=GPP, ER.daily=ER, K600.daily=K600))
DOtime <- data$solar.time
dDOtime <- data$solar.time[-nrow(data)] + (data$solar.time[2] - data$solar.time[1])/2

# args to create_calc_dDOdt determine which values are needed in metab.pars
dDOdt <- create_calc_dDOdt(data, ode_method='pairmeans', GPP_fun='satlight',
  ER_fun='q10temp', deficit_src='DO_mod')
names(formals(dDOdt)) # always the same: args to pass to dDOdt()
environment(dDOdt)$metab.needs # get the names to be included in metab.pars
dDOdt(t=28, state=c(DO.mod=data$DO.obs[28]),
  metab.pars=list(Pmax=0.2, alpha=0.01, ER20=-0.05, K600.daily=3))$dDOdt

# different required args; try in a timeseries
dDOdt <- create_calc_dDOdt(data, ode_method='Euler', GPP_fun='linlight',
  ER_fun='constant', deficit_src='DO_mod')
environment(dDOdt)$metab.needs # get the names to be included in metab
# approximate dDOdt and DO using DO.obs for DO deficits & Eulerian integration
dDOdt.mod.m <- sapply(1:47, function(t) dDOdt(t=t, state=c(DO.mod=data$DO.obs[t]),
  metab.pars=list(GPP.daily=2, ER.daily=-1.4, K600.daily=21))$dDOdt)
DO.mod.m <- cumsum(c(data$DO.obs[1], dDOdt.mod))
plot(x=DOtime, y=data$DO.obs)
lines(x=DOtime, y=DO.mod.m, type='l', col='purple')
plot(x=dDOtime, y=dDOdt.obs)
lines(x=dDOtime, y=dDOdt.mod.m, type='l', col='blue')

# compute & plot a full timeseries with ode() integration
dDOdt <- create_calc_dDOdt(data, ode_method='Euler', GPP_fun='linlight',
  ER_fun='constant', deficit_src='DO_mod')
DO.mod.o <- ode(
  y=c(DO.mod=data$DO.obs[1]),
  parms=list(GPP.daily=2, ER.daily=-1.4, K600.daily=21),
  times=1:nrow(data), func=dDOdt, method='euler')[,'DO.mod']
plot(x=DOtime, y=data$DO.obs)
lines(x=DOtime, y=DO.mod.m, type='l', col='purple')
lines(x=DOtime, y=DO.mod.o, type='l', col='red')
dDOdt.mod.o <- diff(DO.mod)
plot(x=dDOtime, y=dDOdt.obs)
lines(x=dDOtime, y=dDOdt.mod.m, type='l', col='blue')
lines(x=dDOtime, y=dDOdt.mod.o, type='l', col='forestgreen')

# see how values of metab.pars affect the dDOdt predictions
library(dplyr); library(ggplot2); library(tidyr)
dDOdt <- create_calc_dDOdt(data, ode_method='Euler', GPP_fun='linlight',
  ER_fun='constant', deficit_src='DO_mod')
apply_dDOdt <- function(t, GPP.daily, ER.daily, K600.daily) {
  dDOdt(t=t, state=c(DO.mod=data$DO.obs[t]),
    metab.pars=list(GPP.daily=GPP.daily, ER.daily=ER.daily, K600.daily=K600.daily)
  )$dDOdt
}
dDO.preds <- mutate(
  data,
  dDO.preds.base = sapply(1:nrow(data), apply_dDOdt, 3, -5, 15),
  dDO.preds.dblGPP = sapply(1:nrow(data), apply_dDOdt, 6, -5, 15),
  dDO.preds.dblER = sapply(1:nrow(data), apply_dDOdt, 3, -10, 15),
  dDO.preds.dblK = sapply(1:nrow(data), apply_dDOdt, 3, -5, 30))
dDO.preds \%>\%
  select(solar.time, starts_with('dDO.preds')) \%>\%
  gather(key=dDO.series, value=dDO.dt, starts_with('dDO.preds')) \%>\%
  ggplot(aes(x=solar.time, y=dDO.dt, color=dDO.series)) + geom_line()
}
}

